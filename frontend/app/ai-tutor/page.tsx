"use client";

import { useState } from "react";
import Link from "next/link";
import Image from "next/image";
import { Button } from "@/components/ui/button";
import { motion } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
// import { Skeleton } from "@/components/ui/skeleton";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import {
  Video,
  Link as LinkIcon,
  ExternalLink,
  Play,
  Upload,
  Sparkles,
  // ArrowRight,
  Check,
  Loader,
  PlusCircle,
  Video as VideoIcon,
  ArrowLeft,
  Download,
  Info,
} from "lucide-react";

export default function AITutor() {
  const [inputUrl, setInputUrl] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [videoGenerated, setVideoGenerated] = useState(false);
  const [externalVideoUrl, setExternalVideoUrl] = useState("");
  const [showExplanation, setShowExplanation] = useState(false);
  const [flowSteps, setFlowSteps] = useState([
    {
      id: 1,
      title: "Upload Content",
      description: "Provide a URL to the content you want to learn from",
      completed: false,
    },
    {
      id: 2,
      title: "AI Processing",
      description: "Our AI analyzes and breaks down complex concepts",
      completed: false,
    },
    {
      id: 3,
      title: "Video Generation",
      description: "Personalized video tutorial is created for you",
      completed: false,
    },
  ]);

  const handleSubmit = (e: { preventDefault: () => void }) => {
    e.preventDefault();
    if (!inputUrl.trim()) return;

    setIsLoading(true);

    // Update first step as completed
    updateStepCompletion(1, true);

    // Simulate AI processing
    setTimeout(() => {
      updateStepCompletion(2, true);

      // Simulate video generation after another delay
      setTimeout(() => {
        setIsLoading(false);
        setVideoGenerated(true);
        setExternalVideoUrl("https://www.example.com/sample-video");
        updateStepCompletion(3, true);
      }, 2000);
    }, 2000);
  };

  const updateStepCompletion = (stepId: number, completed: boolean) => {
    setFlowSteps((prevSteps) =>
      prevSteps.map((step) =>
        step.id === stepId ? { ...step, completed } : step
      )
    );
  };

  const handlePlayVideo = () => {
    // Logic to play the video
    console.log("Playing video:", externalVideoUrl);
    // Open in new tab or implement video player
    window.open(externalVideoUrl, "_blank");
  };

  return (
    <div className="min-h-screen bg-black">
      {/* Header Section with Gradient Background */}
      <div className="relative w-full py-12 px-6 md:px-12 flex flex-col items-center justify-center bg-gradient-to-b from-gray-900 to-black border-b border-gray-800">
        <div className="absolute inset-0 bg-[linear-gradient(to_right,#9b87f51a_1px,transparent_1px),linear-gradient(to_bottom,#9b87f51a_1px,transparent_1px)] bg-[size:14px_24px]"></div>
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] bg-gradient-radial from-[#9b87f5]/20 via-[#7e69ab]/10 to-transparent rounded-full blur-3xl -z-10"></div>

        <div className="z-10 text-center mb-8">
          <motion.h1
            initial={{ opacity: 0, filter: "blur(10px)" }}
            animate={{ opacity: 1, filter: "blur(0px)" }}
            transition={{ duration: 1, ease: "easeOut" }}
            className="text-4xl sm:text-6xl font-bold mb-6 bg-gradient-to-r from-[#9b87f5] to-[#7e69ab] bg-clip-text text-transparent"
          >
            AI-Powered Learning Tutor
          </motion.h1>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.3 }}
            className="text-xl text-gray-300 mb-4"
          >
            Transform any content into interactive video tutorials with our
            advanced AI
          </motion.p>
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.5, delay: 0.6 }}
          >
            <Link
              href="/"
              className="inline-flex items-center text-[#9b87f5] hover:text-[#7e69ab] transition-colors"
            >
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Home
            </Link>
          </motion.div>
        </div>
      </div>

      <div className="flex-1 flex flex-col md:flex-row">
        {/* Left Side - Upload & Video Section */}
        <div className="w-full md:w-1/2 p-6 md:p-10 border-r border-gray-800">
          <div className="mb-8">
            <h2 className="text-3xl font-bold mb-2 bg-gradient-to-r from-[#9b87f5] to-[#7e69ab] bg-clip-text text-transparent">
              AI Tutor
            </h2>
            <p className="text-gray-400">
              Upload content and get personalized video tutorials generated by
              AI
            </p>
          </div>

          {/* Upload Section */}
          <Card className="mb-8 bg-gray-900/80 backdrop-blur-sm border border-gray-800">
            <CardContent className="p-6">
              <h2 className="text-lg font-medium mb-4 text-white">
                Upload Content
              </h2>

              <form onSubmit={handleSubmit} className="space-y-4">
                <div className="flex items-center gap-2 p-3 rounded-lg bg-gray-800/50 border border-gray-700">
                  <LinkIcon className="text-[#9b87f5] w-5 h-5 flex-shrink-0" />
                  <input
                    type="url"
                    placeholder="Paste a URL to a blog, article, or document"
                    value={inputUrl}
                    onChange={(e) => setInputUrl(e.target.value)}
                    className="bg-transparent outline-none border-none w-full text-white"
                    required
                  />
                </div>

                <Button
                  type="submit"
                  className="w-full bg-[#9b87f5] hover:bg-[#7e69ab] text-white"
                  disabled={isLoading}
                >
                  {isLoading ? (
                    <Loader className="w-4 h-4 mr-2 animate-spin" />
                  ) : (
                    <Upload className="w-4 h-4 mr-2" />
                  )}
                  {isLoading ? "Processing..." : "Generate Tutorial"}
                </Button>
              </form>
            </CardContent>
          </Card>

          {/* Video Preview Section */}
          <Card className="bg-gray-900/80 backdrop-blur-sm border border-gray-800">
            <CardContent className="p-6">
              <h2 className="text-lg font-medium mb-4 text-white">
                Generated Tutorial
              </h2>

              <div className="aspect-video bg-gray-800 rounded-lg overflow-hidden mb-4 flex items-center justify-center">
                {videoGenerated ? (
                  <div className="relative w-full h-full">
                    <div className="absolute inset-0 flex items-center justify-center">
                      <VideoIcon className="w-16 h-16 text-[#9b87f5]/50" />
                    </div>
                    <div className="absolute inset-0 flex items-center justify-center">
                      <Button
                        onClick={handlePlayVideo}
                        className="bg-[#9b87f5] hover:bg-[#7e69ab] text-white rounded-full h-12 w-12 p-0"
                      >
                        <Play className="h-5 w-5 ml-0.5" />
                      </Button>
                    </div>
                  </div>
                ) : (
                  <div className="text-center p-8">
                    <Video className="w-12 h-12 text-gray-600 mx-auto mb-3" />
                    <p className="text-gray-400 text-sm">
                      {isLoading
                        ? "Generating tutorial..."
                        : "No tutorial generated yet"}
                    </p>
                  </div>
                )}
              </div>

              {videoGenerated && (
                <div className="space-y-3">
                  <div className="flex justify-between items-center">
                    <h3 className="font-medium text-white">Your AI Tutorial</h3>
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={handlePlayVideo}
                      className="text-[#9b87f5] hover:text-[#9b87f5] hover:bg-[#9b87f5]/10"
                    >
                      <ExternalLink className="w-4 h-4 mr-1" />
                      Open
                    </Button>
                  </div>
                  <p className="text-sm text-gray-400">
                    This tutorial was generated based on the content you
                    provided. The AI has broken down complex concepts into
                    easily digestible segments.
                  </p>
                  <div className="flex items-center gap-2 mt-4">
                    <Avatar className="h-8 w-8">
                      <AvatarFallback className="bg-[#9b87f5]">
                        AI
                      </AvatarFallback>
                    </Avatar>
                    <div className="text-sm">
                      <p className="text-white">AI Tutor</p>
                      <p className="text-gray-400">Generated just now</p>
                    </div>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>

          {/* Action Buttons */}
          <div className="flex flex-col sm:flex-row items-center justify-center gap-4 mt-6">
            <Button className="w-full sm:w-auto px-8 py-4 h-auto bg-[#9b87f5] hover:bg-[#7e69ab] text-white rounded-full">
              UPLOAD PRESENTATION
            </Button>
            <Button
              variant="outline"
              className="w-full sm:w-auto px-8 py-4 h-auto text-black border-gray-700 rounded-full  hover:bg-[#9e9ca1]"
            >
              <Download className="w-5 h-5 mr-2" />
              VIEW EXAMPLES
            </Button>
          </div>
        </div>

        {/* Right Side - Flow Diagram Section */}
        <div className="w-full md:w-1/2 p-6 md:p-10">
          <div className="mb-8 flex justify-between items-center">
            <h2 className="text-2xl font-bold text-white">How It Works</h2>
            <Button
              variant="ghost"
              onClick={() => setShowExplanation(!showExplanation)}
              className="text-[#9b87f5] hover:bg-[#564a8c]"
            >
              <Info className="w-4 h-4 mr-2" />
              {showExplanation ? "Hide Details" : "Show Details"}
            </Button>
          </div>

          {/* Flow Diagram */}
          <div className="space-y-6 mb-8">
            {flowSteps.map((step, index) => (
              <div key={step.id} className="relative">
                <div className="flex items-start gap-4">
                  <div
                    className={`w-10 h-10 rounded-full flex items-center justify-center flex-shrink-0 ${
                      step.completed ? "bg-[#9b87f5]" : "bg-gray-800"
                    }`}
                  >
                    {step.completed ? (
                      <Check className="w-5 h-5" />
                    ) : (
                      <span className="text-gray-300">{step.id}</span>
                    )}
                  </div>
                  <div className="flex-1">
                    <h3 className="font-medium text-white mb-1">
                      {step.title}
                    </h3>
                    <p className="text-gray-400 text-sm">{step.description}</p>

                    {step.id === 1 && step.completed && (
                      <div className="mt-3 p-2 bg-gray-800/50 rounded border border-gray-700 flex items-center gap-2">
                        <LinkIcon className="w-4 h-4 text-[#9b87f5]" />
                        <span className="text-sm text-gray-300 truncate">
                          {inputUrl}
                        </span>
                      </div>
                    )}

                    {step.id === 2 && isLoading && step.id === 2 && (
                      <div className="mt-3">
                        <div className="w-full bg-gray-800 h-1 rounded-full overflow-hidden">
                          <div className="bg-[#9b87f5] h-full w-2/3 animate-pulse"></div>
                        </div>
                      </div>
                    )}

                    {step.id === 3 && videoGenerated && (
                      <div className="mt-3 flex items-center text-[#9b87f5] text-sm">
                        <Sparkles className="w-4 h-4 mr-1" />
                        <span>Tutorial successfully generated!</span>
                      </div>
                    )}
                  </div>
                </div>

                {/* Connector line between steps */}
                {index < flowSteps.length - 1 && (
                  <div className="absolute left-5 top-10 bottom-0 w-0 border-l-2 border-gray-800 h-12 -ml-0.5"></div>
                )}
              </div>
            ))}
          </div>

          {/* Explanation Panel (conditionally rendered) */}
          {showExplanation && (
            <Card className="mb-6 bg-gray-900/60 border border-gray-800">
              <CardContent className="p-6">
                <h3 className="text-xl font-medium mb-4 text-[#9b87f5]">
                  How It Works
                </h3>
                <ul className="space-y-4">
                  <li className="flex gap-3">
                    <span className="font-bold text-[#9b87f5] min-w-[100px]">
                      PDF Toolkit:
                    </span>
                    <span className="text-gray-300">
                      Extracts content from your documents
                    </span>
                  </li>
                  <li className="flex gap-3">
                    <span className="font-bold text-[#9b87f5] min-w-[100px]">
                      AI API:
                    </span>
                    <span className="text-gray-300">
                      Processes content and generates structured data
                    </span>
                  </li>
                  <li className="flex gap-3">
                    <span className="font-bold text-[#9b87f5] min-w-[100px]">
                      Images:
                    </span>
                    <span className="text-gray-300">
                      Extracted from your content to include in the tutorial
                    </span>
                  </li>
                  <li className="flex gap-3">
                    <span className="font-bold text-[#9b87f5] min-w-[100px]">
                      Audio:
                    </span>
                    <span className="text-gray-300">
                      Generated from your content with natural voices
                    </span>
                  </li>
                  <li className="flex gap-3">
                    <span className="font-bold text-[#9b87f5] min-w-[100px]">
                      Video Engine:
                    </span>
                    <span className="text-gray-300">
                      Combines all assets into a cohesive video presentation
                    </span>
                  </li>
                  <li className="flex gap-3">
                    <span className="font-bold text-[#9b87f5] min-w-[100px]">
                      Output:
                    </span>
                    <span className="text-gray-300">
                      A complete video tutorial ready for your learning needs
                    </span>
                  </li>
                </ul>
              </CardContent>
            </Card>
          )}

          {/* Learning Resources */}
          <Card className="bg-gray-900/80 backdrop-blur-sm border border-gray-800 mb-8">
            <CardContent className="p-6">
              <h3 className="text-lg font-medium mb-4 text-white">
                Additional Learning Resources
              </h3>
              <div className="space-y-3">
                <div className="p-3 bg-gray-800/50 rounded-lg flex items-center gap-3 cursor-pointer hover:bg-gray-800 transition">
                  <div className="w-8 h-8 bg-[#9b87f5]/20 rounded-full flex items-center justify-center">
                    <Video className="w-4 h-4 text-[#9b87f5]" />
                  </div>
                  <div>
                    <h4 className="text-white text-sm font-medium">
                      Video Tutorials
                    </h4>
                    <p className="text-gray-400 text-xs">
                      Learn through visual guides
                    </p>
                  </div>
                </div>
                <div className="p-3 bg-gray-800/50 rounded-lg flex items-center gap-3 cursor-pointer hover:bg-gray-800 transition">
                  <div className="w-8 h-8 bg-[#9b87f5]/20 rounded-full flex items-center justify-center">
                    <PlusCircle className="w-4 h-4 text-[#9b87f5]" />
                  </div>
                  <div>
                    <h4 className="text-white text-sm font-medium">
                      Request Custom Tutorial
                    </h4>
                    <p className="text-gray-400 text-xs">
                      Get personalized learning assistance
                    </p>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Workflow Diagram */}
          <Card className="bg-gray-900/80 backdrop-blur-sm border border-[#9b87f5]">
            <CardContent className="p-6">
              <h3 className="text-lg font-medium mb-4 text-white">
                Workflow Diagram
              </h3>
              <div className="flex justify-center">
                <div className="relative w-full">
                  <Image
                    src="/workflow.png"
                    alt="AI Tutor Workflow Diagram"
                    width={800}
                    height={600}
                    className="mx-auto rounded-lg border border-gray-700"
                    priority
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
